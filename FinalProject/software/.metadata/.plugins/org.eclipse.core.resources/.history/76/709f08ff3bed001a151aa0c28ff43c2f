#include <stdio.h>
#include "system.h"
#include "time.h"
#include "alt_types.h"
#include <unistd.h>  // usleep
#include "io_handler.h"
#include "saber_logic.h"
#include "SnowMan_logic.h"
#include "usb_main.h"
//#ifdef _WIN32
//#include <Windows.h>
//#else
//#include <unistd.h>
//#endif

#define UP_END 0
#define DOWN_END 479
#define NOPRESS 0
#define LEFT_END 0
#define RIGHT_END 637
#define MAX_KEY 4 // allow four keys pressed in the same time

volatile unsigned int *game_file =(unsigned int*) 0x00000100;



enum Key_event
{PRESS_UP = 1, PRESS_DOWN, PRESS_LEFT, PRESS_RIGHT, PRESS_ATK, PRESS_SKILL
}event;

void key_event(saber_t* saber){

}
int main(){
	saber_t saber;
	snowman_t snowman;
	usb_init();		// initialize usb
	saber_init(&saber);
	snowman_init(&snowman);
	unsigned long key;
	int key_array[2];
	int cur_key;
	int walk_x, walk_y;
	while (1){
		walk_x = 0;
		walk_y = 0;
		double time_to_switch = 0.2;
		clock_t begin = clock();
		clock_t end = clock();
		while ((double)(end-begin)/CLOCKS_PER_SEC <time_to_switch){
			end = clock();
		}

		key = get_keycode();
		key_array[0]= (key>>24) & 0xff;
		key_array[1]= (key>>16) & 0xff;
		key_array[2]= (key>>8) & 0xff;
		key_array[3]= key & 0xff;

		for (int i =0; i< MAX_KEY;i++){
			cur_key = key_array[i];
			if (cur_key == KEY_W ){
				press_w(&saber);
				walk_y = 1;
			}
			if (cur_key == KEY_S){
				press_s(&saber);
				walk_y = 1;
			}
			if (cur_key == KEY_A){
				press_a(&saber);
				walk_x = 1;
			}
			if (cur_key == KEY_D){
				press_d(&saber);
				walk_x = 1;
			}
			if (cur_key == KEY_J){
				press_j(&saber);
			}
			if (cur_key == KEY_K){
				press_k(&saber);
			}
			if (cur_key == KEY_L){
				press_l(&saber);
			}
		}

		if (walk_x==0){
			saber.vx = 0;
		}
		if (walk_y ==0){
			saber.vy = 0;
		}
		update(&saber);
		snowman_update(&snowman, &saber);

		game_file[0] = saber.exit;
		game_file[1] = saber.x;
		game_file[2] = saber.y;
		game_file[3] = saber.state;
		game_file[4] = saber.HP > 2;

		game_file[7] = snowman.exit;
		game_file[8] = snowman.x;
		game_file[9] = snowman.y;
		game_file[10] = snowman.state;

		printf("dead count :%x\n", snowman.dead_cout);
	}
}













